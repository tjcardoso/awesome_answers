<h1><%=@question.title %></h1>
<p><%= @question.body %></p>
<p>View count: <%= @question.view_count%></p>
<p>Created by: <%= @question.user_full_name.titleize %></p>
<p>Tags: <%= @question.tags.map(&:name).join(", ")%></p>
<!-- can? is a helper method that came from CANCANCAN gem to help us
enforce authorization rules in the views and controllers. We didn't specify
put rules for :edit and :destroy but we put a rule for :manage which includes
both of them -->
<% if can? :crud, @question %>
<%= link_to "Edit", edit_question_path(@question)%>
<%end%>
<% if can? :crud, @question %>
<%= link_to "Delete", question_path(@question),
                      method: :delete,
                      data: {confirm: 'Are you sure?'} %>
<% end %>
<br><br>


<% if user_like %>
  <%= link_to "Un-like", question_like_path(@question,user_like), method: :delete %>
<% else %>
  <%= link_to "Likes: ", question_likes_path(@question), method: :post %>
<% end %>
(<%= @question.likes.count %>)
  |
<% user_vote = @question.vote_for(current_user)%>
<% if user_vote && user_vote.is_up?%>
  <%= link_to "Un-do Vote Up", question_vote_path(@question, user_vote), method: :delete %>
  <%= link_to "Vote Down", question_vote_path(@question, user_vote, {vote: {is_up: false}}), method: :patch %>
<% elsif user_vote%>
  <%= link_to "Vote up", question_vote_path(@question, user_vote, {vote: {is_up: true}}), method: :patch  %>
  <%= link_to "Un-do Vote Down", question_vote_path(@question, user_vote), method: :delete %>
<% else %>
<%= link_to "Vote Up", question_votes_path(@question, {vote: {is_up: true}}), method: :post %> |
<%= link_to "Vote Down",  question_votes_path(@question, {vote: {is_up: false}}), method: :post%>
<% end %>

(<%=@question.vote_value %> )
<hr>

<div id="answer-form">
  <%= render "/answers/form", answer: @answer %>

</div>


<h2>Answers</h2>
<div id="answers">
  <% @question.answers.each do |ans|%>
    <%= render "/answers/answer", answer: ans %>
  <% end %>
</div>
